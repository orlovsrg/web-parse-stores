#Интересные теги HTML 5:

<header>header</header>
<nav>nav</nav>
<aside>aside</aside>
<article>article</article>
<section>section</section>
<article>article</article>
<details>
    <summary>OOO</summary>
</details>


#Свойства для flex:

display: flex;
<<--
flex-direction: column;
flex-wrap: wrap;
flex-flow: row wrap;
-->>
order: 1;
flex:  3 1 100px;
justify-content: flex-start;
align-items: flex-start;
align-self: center;
align-content: flex-end;

#
By elementLocator - By.id("#element_id");
WebElement element = driver.findElement(s)(elementLocator);
-->> or
WebElement element = driver.findElement(s)(By.id("#element_id")); // Эллемент по id

element.click(); // Клик по элементу

assertEquals("some string", driver.get...()); // Проверка

driver.quit(); // Закрытие браузера

WebElement element = driver.findElement(s)(By.<selector>); // Эллемент по какому-то селектору

By.id;
By.name;
By.className;
By.tagName;
By.linkText("linkText"); -- поиск текстовой ссылки <a>linkText</a>
By.partialLincText; -- поиск строки текса эллемента
By.cssSelector("div.main"); -- <div id="main">
By.xpath("//div[@class='main']"); -- <div class='main'>

driver.get("http://google.com")
driver.findElement(By.id("element_id")).click();

driver.manager().timeouts().implicitlyWait(10, TimeUnit.SECOND) -- ожидание поиска эллемента
driver.manager().timeouts().pageLoadTimeout(10, TimeUnit.SECOND) -- ожидание загрузки страници
driver.manager().timeouts().setScriptTimeout(10, TimeUnit.SECOND) -- ожидание отработки скриплов


WebElement dynamicElement = (new WebDriverWait(driver, 10))
.until(ExpectedConditions.presenceOfElementLocated(By.id("dynamicElement")));

# Локаторы c использоанием CSS
WebElement userName = driver.findElement(By.cssSelector("html body div div form input")); -- полный путь
WebElement userName = driver.findElement(By.cssSelector("input")); -- относительный путь
WebElement userName = driver.findElement(By.cssSelector("div>a")); -- дочерний эллемент
WebElement userName = driver.findElement(By.cssSelector("div a")); -- дочерний эллемент любого уровня
WebElement userName = driver.findElement(By.cssSelector("input#username")); -- поисп по id
WebElement userName = driver.findElement(By.cssSelector("#username")); -- поисп по id
WebElement userName = driver.findElement(By.cssSelector("input.classname")); -- поисп по class
WebElement userName = driver.findElement(By.cssSelector(".classname")); -- поисп по class
WebElement previous = driver.findElement(By.cssSelector("img[alt='Previous']")); -- поиск по значению атрибута html тегов
List<WebElement> previous = driver.findElements(By.cssSelector("img[alt]")); -- поиск по названию атрибута html тегов
WebElement previousButton = driver.findElement(By.cssSelector("header[id^='page-']")); -- поисп началу строки
WebElement previousButton = driver.findElement(By.cssSelector("header[id$='page-']")); -- поисп окончанию строки
WebElement previousButton = driver.findElement(By.cssSelector("header[id*='page-']")); -- поисп частичному совподению строки


Рассмотрим некоторые примеры:
Абсолютный путь:
WebElement userName = driver.findElement(By.xpath("html/body/div/div/form/input"));
Относительный путь:
WebElement userName = driver.findElement(By.xpath("//input"));
Поиск непосредственного дочернего элемента:
WebElement userName = driver.findElement(By.xpath("//div/a"));
Поиск дочернего элемента любого уровня:
WebElement userName = driver.findElement(By.xpath("//div//a"));
Поиск элемента по тексту:
WebElement userName = driver.findElement(By.xpath(".//*[text()='Первая ссылка']/.."));
Поиск по значениям атрибутов:
WebElement userName = driver.findElement(By.xpath("//input[@id='username']"));
Поиск по названию атрибутов:
List<WebElement> imagesWithAlt = driver.findElements(By.xpath ("img[@alt]"));
Поиск родительского элемента:
WebElement userName = driver.findElement(By.xpath("//input[@id='username']/.."));



ПРИМЕР.

public class WebDriverExample {
    public static void main(String[] args) {
        // Создаём экземпляр
        // Скрипт работает с интерфейсом а не с реалезацией

        WebDriver driver = new ChromeDriver();

        // Открываем ссылку используя драйвер
        driver.get("https://google.com");
        // Другой вариант
        driver.navigate().to("https://google.com");

        // Находим эллемент по атрибуту name
        WebElement element = driver.findElement(By.name("q"));

        // Вводим текст
        element.sendKeys("selenium");

        // Отправляем форму, драйвер сам определит как отправить форму по элементу
        element.submit();
        // Проверяем тайтл страници
        System.out.println("Page title is: " + driver.getTitle());

        // Страницы гугл динамически отрисовываются с помощью javascript
        // Ждем загрузки страницы с таймаутом в 10 секунд
        (new WebDriverWait(driver, 10)).until(new ExpectedCondition<Boolean>() {
            public Boolean apply(WebDriver d) {
                return d.getTitle().toLowerCase().startsWith("selenium");
            }
        });


        // Ожидаем увидеть: "Selenium - Google Search"
        System.out.println("Page title is: " + driver.getTitle());
        // Закрываем браузер
        driver.quit();
    }
}

#Другие полезные методы
Клик левой кнопкой мыши:
click()
click(WebElement onElement)

Клик с удержанием:
clickAndHold()
clickAndHold(WebElement onElement)

Правый клик:
contextClick()
contextClick(WebElement onElement)

Пример работы с контекстным меню:
Actions builder = new Actions(driver);
builder.contextClick(webElement).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).send

Перетаскивание со смещением:
dragAndDropBy(WebElement source, int xOffset, int yOffset)

Нажатие и удержание клавиши и дальнейшее ее отпускание:
keyDown(Keys theKey) / keyDown(WebElement element, Keys key)
keyUp(Keys theKey) / keyUp(WebElement element, Keys key)

Смещение мыши:
moveByOffset(int xOffset, int yOffset)

Перемещение мыши на элемент:
moveToElement(WebElement toElement)
moveToElement(WebElement toElement, int xOffset, int yOffset)

Отпускание клавиши мыши:
release()
release(WebElement onElement)
//Вариант:
sendKeys(Keys.NULL)

Набор текста на клавиатуре:
sendKeys(java.lang.CharSequence... keysToSend)
sendKeys(WebElement element, java.lang.CharSequence... keysToSend)

Построение цепочки действий:
build()

Выполнение построенной цепочки действий:
perform()









@Test
public void testDoubleClick() throws Exception {

    WebDriver driver = new ChromeDriver();
    driver.get("http://dl.dropbox.com/u/55228056/DoubleClickDemo.html");
    WebElement message = driver.findElement(By.id("message"));

    //Verify color is Blue
    assertEquals("rgb(0, 0, 255)",
    message.getCssValue("background-color").toString());
    Actions builder = new Actions(driver);
    builder.doubleClick(message).build().perform();

    //Verify Color is Yellow
    assertEquals("rgb(255, 255, 0)",
    message.getCssValue("background-color").toString());
    driver.close();
}

Перетягивание объекта:
@Test
public void testDragDrop() {
    driver.get("http://dl.dropbox.com/u/55228056/DragDropDemo.html");
    WebElement source = driver.findElement(By.id("draggable"));
    WebElement target = driver.findElement(By.id("droppable"));

    Actions builder = new Actions(driver);
    builder.dragAndDrop(source, target).perform();
    try {
        assertEquals("Dropped!", target.getText());
    } catch (Error e) {
     verificationErrors.append(e.toString());
    }
}


// Telegram bot

User name: MessageOfPriceBot
Token bot: 1270144712:AAEqbu4KvaddHqT1fVwmg4XiI5YUbW9IO-Y
WebHook url: https://377e33f5.ngrok.io

